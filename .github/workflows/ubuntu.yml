name: Ubuntu
on:
  push:
    branches:
      - master
    paths:
      - "project/**"
      - "!project/examples/gui/qt/**"
      - ".github/workflows/ubuntu.yml"
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "project/**"
      - "!project/examples/gui/qt/**"
      - ".github/workflows/ubuntu.yml"
env:
  vcpkg_dir: "/usr/local/share/vcpkg"
  vcpkg_triplet: x64-linux

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Python environment
        uses: actions/setup-python@v2
      - name: Cache libs
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/.conan/data/
            ${{ github.workspace }}/build/vcpkg_installed
            ${{ env.vcpkg_dir }}
            !${{ env.vcpkg_dir }}/.git
            !${{ env.vcpkg_dir }}/buildtrees
            !${{ env.vcpkg_dir }}/packages
            !${{ env.vcpkg_dir }}/downloads
            ${{ env.pythonLocation }}
          key: vcpkg-${{ env.vcpkg_triplet }}-${{ matrix.os }}
      - name: ubuntu update
        run: sudo apt-get update
      - name: ubuntu install library
        run: >
          sudo apt-get install -y
          ninja-build xorg-dev libx11-xcb-dev libxcb-render-util0-dev libxcb-xkb-dev
          libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev
          libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev
          libxcb-dri3-dev libxcb-util-dev libuv1
      - name: Update GCC
        if: matrix.config.os == 'ubuntu-20.04'
        run: |
          sudo apt-get install -y gcc-11 gcc-11-multilib g++-11 g++-11-multilib
          name=CC::gcc-11
          name=CXX::g++-11
      - name: Install conan
        run: |
          pip install conan --upgrade
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - name: Cmake Configure and Build
        run: >
          cmake -S .
          -B build
          -DBUILD_TESTING=TRUE
          -DBUILD_SHARED_LIBS=TRUE
          -DCMAKE_BUILD_TYPE=Release
          -G Ninja
          -DCMAKE_C_COMPILER=/usr/bin/gcc-11
          -DCMAKE_CXX_COMPILER=/usr/bin/g++-11
          -DCMAKE_TOOLCHAIN_FILE=${{ env.vcpkg_dir }}/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: cmake --build build --target install --config Release
