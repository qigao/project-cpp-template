name: MacOS
on:
  push:
    branches:
      - master
    paths:
      - "project/**"
      - "!project/examples/gui/qt/**"
      - ".github/workflows/macos.yml"
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "project/**"
      - "!project/examples/gui/qt/**"
      - ".github/workflows/macos.yml"

env:
  vcpkg_dir: "/usr/local/share/vcpkg"
  vcpkg_triplet: x64-osx

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11.0]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Python environment
        uses: actions/setup-python@v2
      - name: Cache libs
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/.conan/data/
            ${{ github.workspace }}/build/vcpkg_installed
            ${{ env.vcpkg_dir }}
            !${{ env.vcpkg_dir }}/.git
            !${{ env.vcpkg_dir }}/buildtrees
            !${{ env.vcpkg_dir }}/packages
            !${{ env.vcpkg_dir }}/downloads
            ${{ env.pythonLocation }}
          key: vcpkg-${{ env.vcpkg_triplet }}-${{ matrix.os }}
      - name: Install tools
        run: |
          brew install ninja
          brew install clang-format
      - name: Update Clang
        if: matrix.config.os == 'macos-11.0'
        run: |
          curl --output clang.tar.xz -L https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.1/clang+llvm-13.0.1-x86_64-apple-darwin.tar.xz
          mkdir clang
          tar -xvJf clang.tar.xz -C clang
          cd clang/clang+llvm-13.0.1-x86_64-apple-darwin
          sudo cp -R * /usr/local/
          export CC=/usr/local/bin/clang
          export CXX=/usr/local/bin/clang++
      - name: Install conan
        run: |
          pip install conan --upgrade
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libc++ default
      - name: Configure cmake
        run: >
          cmake -S .
          -B build
          -DBUILD_TESTING=TRUE
          -DBUILD_SHARED_LIBS=TRUE
          -DCMAKE_BUILD_TYPE=Release
          -G Ninja
          -DCMAKE_C_COMPILER=/usr/local/bin/clang
          -DCMAKE_CXX_COMPILER=/usr/local/bin/clang++
          -DCMAKE_TOOLCHAIN_FILE=${{ env.vcpkg_dir }}/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: cmake --build build --target install --config Release
