name: Ubuntu Build With QT6
on:
  push:
    branches:
      - master
    paths:
      - 'project/examples/gui/**'
      - '.github/workflows/ubuntu-qt6.yml'
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - 'project/examples/gui/**'
      - '.github/workflows/ubuntu-qt6.yml'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        qt_ver: [6.2.3]
        qt_arch: [gcc_64]
        qt_target: [desktop]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Python environment
        uses: actions/setup-python@v2
      - name: ubuntu install library
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build xorg-dev libx11-xcb-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-util-dev
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
          target: ${{ matrix.qt_target }}
      - name: Install conan
        run: |
          pip install conan --upgrade
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
      - name: Cmake Configure and Build
        run: |
          cmake -S . -B build -DBUILD_TESTING=TRUE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_BUILD_TYPE=Release -G Ninja -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }} -DBUILD_WITH_QT6=TRUE
      - name: Build
        run: |
          cmake --build build --target install --config Release
