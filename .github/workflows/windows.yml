name: Windows
on:
  push:
    branches:
      - master
    paths:
      - "project/**"
      - "!project/examples/gui/qt/**"
      - ".github/workflows/windows.yml"
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "project/**"
      - "!project/examples/gui/**"
      - ".github/workflows/windows.yml"
env:
  vcpkg_dir: c:\vcpkg
  vcpkg_triplet: x64-windows

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        qt_arch: [win64_msvc2019_64]
        os: [windows-2019]

    steps:
      - name: Perform checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Python environment
        uses: actions/setup-python@v2
      - name: Cache vcpkg
        uses: actions/cache@v2
        with:
          path: ${{ env.vcpkg_dir }}/installed
          key: vcpkg-${{ env.vcpkg_triplet }}
          restore-keys: |
            vcpkg-${{ env.vcpkg_triplet }}
      - name: Install vcpkg packages
        shell: bash
        run: |
          vcpkg install --triplet ${{ env.vcpkg_triplet }} $(jq -r '.dependencies | @tsv' packages/vcpkg.json)
      - name: Install Ninja
        run: choco install ninja
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
      - name: Install Conan
        run: |
          pip install conan --upgrade
          conan profile new default --detect
      - name: Cmake Configure and Build
        run: >
          cmake -S .
          -B build
          -DBUILD_TESTING=TRUE
          -DBUILD_SHARED_LIBS=TRUE
          -DCMAKE_BUILD_TYPE=Release
          -G Ninja
          -DCMAKE_TOOLCHAIN_FILE=${{ env.vcpkg_dir }}/scripts/buildsystems/vcpkg.cmake
      - name: Cmake build
        run: cmake --build  build --target install --config Release
