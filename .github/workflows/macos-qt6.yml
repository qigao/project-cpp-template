name: MacOS Build With QT6
on:
  push:
    branches:
      - master
    paths:
      - "project/examples/gui/qt/**"
      - ".github/workflows/macos-qt6.yml"
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "project/examples/gui/qt/**"
      - ".github/workflows/macos-qt6.yml"

env:
  vcpkg_dir: "/usr/local/share/vcpkg"
  vcpkg_triplet: x64-osx

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15,macos-11]
        qt_ver: [6.2.3]
        qt_arch: [clang_64]
        qt_target: [desktop]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: prepare env
        if: ${{ matrix.os == 'macos-11.0' }}
        run: |
          softwareupdate --all --install --force
          sudo xcode-select --print-path
          sudo xcode-select --switch /Library/Developer/CommandLineTools
      - name: Install Python environment
        uses: actions/setup-python@v2
      - name: Cache libs
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/.conan/data/
            ${{ github.workspace }}/build/vcpkg_installed
            ${{ env.vcpkg_dir }}
            !${{ env.vcpkg_dir }}/.git
            !${{ env.vcpkg_dir }}/buildtrees
            !${{ env.vcpkg_dir }}/packages
            !${{ env.vcpkg_dir }}/downloads
            ${{ env.pythonLocation }}
          key: vcpkg-${{ env.vcpkg_triplet }}-${{ matrix.os }}-${{ matrix.qt_ver }}
      - name: Install vcpkg packages
        shell: bash
        run: |
          vcpkg install --triplet ${{ env.vcpkg_triplet }} $(jq -r '.dependencies | @tsv' packages/vcpkg.json)
      - name: Install tools
        run: |
          brew install ninja
          brew install clang-format
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_ver }}
      - name: Install conan
        run: |
          pip install conan --upgrade
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libc++ default
      - name: Configure cmake
        run: >
          cmake -S . -B build
          -DBUILD_TESTING=TRUE
          -DBUILD_SHARED_LIBS=TRUE
          -DCMAKE_BUILD_TYPE=Release
          -G Ninja
          -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }}
          -DBUILD_WITH_QT6=TRUE
          -DCMAKE_TOOLCHAIN_FILE=${{ env.vcpkg_dir }}/scripts/buildsystems/vcpkg.cmake
      - name: Build
        run: cmake --build build --target install --config Release
