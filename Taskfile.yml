version: 3

includes:
  core_project:  core/Taskfile.yml

vars:
  CMAKE_GENERATOR: "Ninja Multi-Config"
  CWD:
    sh: git rev-parse --show-toplevel

tasks:

  lint::clang-format:
    cmds:
      - cmd: powershell -c '$files=(git ls-files --exclude-standard); foreach ($file in $files) { if ((get-item $file).Extension -in ".cpp", ".hpp", ".c", ".cc", ".cxx", ".hxx", ".ixx") { clang-format -i -style=file $file } }'
        platforms: [windows]
      - cmd: git ls-files --exclude-standard | grep -E '\.(cpp|hpp|c|cc|cxx|hxx|ixx)$' | xargs clang-format -i -style=file
        platforms: [linux, darwin]

  lint::cmake:
    cmds:
      - cmd: powershell -c '$files=(git ls-files --exclude-standard); foreach ($file in $files) { $item=(get-item $file); if (($item.Name -eq "CMakeLists.txt") -or ($item.Extension -in ".cmake")) { cmake-format --in-place $file; cmake-lint $file {{.CMAKE_LINT_FLAGS}} } }'
        platforms: [windows]
      - cmd: git ls-files --exclude-standard | grep -E '(CMakeLists\.txt)|(\.(cmake))$' | xargs cmake-format --in-place | xargs cmake-lint {{.CMAKE_LINT_FLAGS}}
        platforms: [linux, darwin]
    vars:
      CMAKE_LINT_FLAGS: --disabled-codes C0103 C0301 R0912 R0915 R0913 --suppress-decorations
  lint::vcpkg:
    cmds:
        -  ~/vcpkg/vcpkg format-manifest ./vcpkg.json
  lint:
    deps:
      - task:  lint::cmake
      - task:  lint::clang-format
    cmds:
      - task: lint::vcpkg

  clean:
    cmds:
      - cmd: powershell -c 'function rmrf($path) { if (test-path $path) { rm -r -force $path }}; rmrf ./build; rmrf ./install'
        platforms: [windows]
      - cmd: rm -rf ./install ./build
        platforms: [linux, darwin]

  config:
    cmds:
     - cmd: cmake --workflow --list-presets
     - cmd: cmake --workflow --preset developer

