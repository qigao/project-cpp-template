version: 3

includes:
    core:
        taskfile: ./core/Taskfile.yml

vars:
    CMAKE_PRESET_DIR: build/developer
    CMAKE_BUILD_DIR: "{{.ROOT_DIR}}/{{.CMAKE_PRESET_DIR}}"

tasks:
    lint:clang-format:
        cmds:
            - cmd: powershell -c '$files=(git ls-files --exclude-standard); foreach ($file in $files) { if ((get-item $file).Extension -in ".cpp", ".hpp", ".c", ".cc", ".cxx", ".hxx", ".ixx") { clang-format -i -style=file $file } }'
              platforms: [windows]
            - cmd: git ls-files --exclude-standard | grep -E '\.(cpp|hpp|c|cc|cxx|hxx|ixx)$' | xargs clang-format -i -style=file
              platforms: [linux, darwin]

    lint:cmake:
        cmds:
            - cmd: powershell -c '$files=(git ls-files --exclude-standard); foreach ($file in $files) { $item=(get-item $file); if (($item.Name -eq "CMakeLists.txt") -or ($item.Extension -in ".cmake")) { cmake-format --in-place $file; cmake-lint $file {{.CMAKE_LINT_FLAGS}} } }'
              platforms: [windows]
            - cmd: git ls-files --exclude-standard | grep -E '(CMakeLists\.txt)|(\.(cmake))$' | xargs cmake-format --in-place | xargs cmake-lint {{.CMAKE_LINT_FLAGS}}
              platforms: [linux, darwin]
        vars:
            CMAKE_LINT_FLAGS: --disabled-codes C0103 C0301 R0912 R0915 R0913 --suppress-decorations
    lint:vcpkg:
        cmds:
            - ~/vcpkg/vcpkg format-manifest ./vcpkg.json
    lint.all:
        desc: cpp, cmake, and vcpkg linting
        deps:
            - task: lint:cmake
            - task: lint:clang-format
        cmds:
            - task: lint:vcpkg

    clean:vcpkg:
        desc: clean vcpkg
        cmds:
            - rm -rf ./vcpkg
    clean:conan:
        desc: clean conan
        cmds:
            - rm -rf ./conan2
    clean:build:
        desc: clean all build artifacts
        cmds:
            - cmd: powershell -c 'function rmrf($path) { if (test-path $path) { rm -r -force $path }}; rmrf ./build; rmrf ./install'
              platforms: [windows]
            - cmd: rm -rf ./install ./build
              platforms: [linux, darwin]

    clean.all:
        desc: clean all build artifacts
        deps:
            - task: clean:vcpkg
            - task: clean:conan
            - task: clean:build

    test.all:
        desc: all the test tasks from modules
        deps:
            - task: core:server:yaml_convert:test

    coverage.all:
        desc: all the coverage tasks from modules
        deps:
            - task: core:server:yaml_convert:coverage

    config:
        desc: list all cmake presets, then generate the developer preset
        cmds:
            - cmake --workflow --list-presets
            - cmake --workflow --preset developer

    default:
        desc: list all tasks
        cmds:
            - go-task -a
